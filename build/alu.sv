// Generated by CIRCT firtool-1.62.1
module ArithmetricLogicUnit(
  input        clock,
               reset,
  input  [2:0] io_instr,
  input  [7:0] io_a,
               io_b,
  output       io_out_valid,
  output [7:0] io_out_bits
);

  wire [8:0]       _add_overflow_T_1 = {1'h0, io_a} + {1'h0, io_b};
  wire             _div_by_zero_T_1 = io_b == 8'h0;
  wire [15:0]      _GEN =
    {8'h0, io_instr == 3'h1 ? io_a - io_b : (|io_instr) ? 8'h0 : _add_overflow_T_1[7:0]};
  wire [7:0][15:0] _GEN_0 =
    {{{8'h0, io_a | io_b}},
     {{8'h0, io_a & io_b}},
     {{8'h0, ~io_a}},
     {{8'h0, io_a ^ io_b}},
     {{8'h0, _div_by_zero_T_1 ? 8'h0 : io_a / io_b}},
     {{8'h0, io_a} * {8'h0, io_b}},
     {_GEN},
     {_GEN}};
  assign io_out_valid =
    ~(io_instr == 3'h3 & _div_by_zero_T_1 | ~(|io_instr) & _add_overflow_T_1[8]);
  assign io_out_bits = _GEN_0[io_instr][7:0];
endmodule


